{
  "name": "SSH File Transfer Protocol",
  "shortName": "SFTP",
  "summary": "A network protocol that provides secure file access, transfer, and management over a reliable data stream, typically running over SSH (Secure Shell). Unlike FTP, it uses a single encrypted connection for both commands and data.",
  "layer": "Application",
  "ports": [22],
  "rfcs": ["RFC 4253", "RFC 4254", "RFC 4251"],

  "purpose": "Provide secure file transfer and management with encryption, authentication, and integrity protection",

  "handshake": {
    "description": "SFTP relies on SSH to establish a secure connection. The SSH handshake authenticates the server and optionally the client, then negotiates encryption keys.",
    "steps": [
      "Step 1: Client initiates TCP connection to server on port 22.",
      "Step 2: SSH handshake occurs, authenticating server and establishing encryption keys.",
      "Step 3: Client and server negotiate SFTP protocol version and session parameters.",
      "Step 4: Secure file transfer and management commands are exchanged over the encrypted channel."
    ]
  },

  "fields": [
    {
      "name": "Command",
      "type": "Binary message",
      "description": "Requests sent by the client, e.g., OPEN, READ, WRITE, REMOVE, etc."
    },
    {
      "name": "Response",
      "type": "Binary message",
      "description": "Server replies to client commands, confirming success or reporting errors"
    },
    {
      "name": "File Data",
      "type": "Binary",
      "description": "Encrypted file content sent over the SFTP session"
    }
  ],

  "message": {
    "unit": "SFTP packet",
    "structure": {
      "header": "Command or Response type, packet ID, other metadata",
      "payload": "Encrypted file data or command-specific data"
    }
  },

  "usage": [
    "Secure file upload and download",
    "Remote file management over encrypted connections",
    "Automated backups and secure data transfer"
  ],

  "pitfalls": [
    "Requires SSH key management or password authentication",
    "Slightly higher overhead than FTP/FTPS due to encryption",
    "Dependent on SSH configuration and security policies",
    "Firewall traversal is simpler than FTPS, but still requires port 22 open"
  ]
}
